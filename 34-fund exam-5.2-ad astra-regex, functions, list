# un exam 5.2 ad astra - regex, functions, list

def calories(result):
    import math
    calories = []
    food = []
    date = []
    sum_calories = 0
    calories_per_day = 0
    for els in result:
        food_to_be_added = els[1]
        food.append(food_to_be_added)
        date_to_be_added = els[3]
        date.append(date_to_be_added)
        calories_to_be_added = int(els[4])
        calories.append(calories_to_be_added)
    for calorie in range(0, len(calories)):
        sum_calories += calories[calorie]
    calories_per_day = sum_calories / 2000
    calories_per_day = math.floor(calories_per_day)
    return calories_per_day, food, date, calories



import re
pattern = r"(?P<group1>[|]|#)(([A-Za-z]+\s?)+)(?P=group1)(\d{2}/\d{2}/\d{2})(?P=group1)(\d+)(?P=group1)"
text = input()
# text = "$$#@@%^&#Fish#24/12/20#8500#|#Incorrect#19.03.20#450|$5*(@!#Ice Cream#03/10/21#9000#^#@aswe|Milk|05/09/20|2000|"

result = re.findall(pattern, text)
calories_per_day, food, date, calories = calories(result)
print(f'You have food to last you for: {calories_per_day} days!')
index = 0
for index in range(len(calories)):
    print(f"Item: {food[index]}, Best before: {date[index]}, Nutrition: {calories[index]}")
    index += 1
