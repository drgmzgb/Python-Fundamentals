# un exam 2.1 password reset - slicing
def TakeOdd(password):
    index = 0
    new_password = ""
    for el in password:
        if not index % 2 == 0:
            new_password += el
        index += 1
    return new_password

def Cut(password):
   new_password = ""
   index = 0
   for element in password:
      new_command = command.split()
      if index == int(new_command[1]):
         first_half = password[:int(new_command[1])]
         next_index = int(new_command[1]) + int(new_command[2])
         second_half = password[next_index::]
         new_password = first_half + second_half
         return new_password
      index += 1


def Substitute(password):
     ModifiedPassword = False
   new_password = ""
   new_command = command.split()
   symbol = new_command[1]
   new_symbol = new_command[2]
   if symbol in password:
       new_password = password.replace(symbol, new_symbol)
       ModifiedPassword = True
   if not ModifiedPassword:
      return "Nothing to replace!"
   return new_password


password = "up8rgoyg3r1atmlmpiunagt!-irs7!1fgulnnnqy"
# TakeOdd
# Cut 18 2
# Substitute ! ***
# Substitute ? .!.
# Done

command = input()
while not command == "Done":
    if command == "TakeOdd":
        password = TakeOdd(password)
        print(password)
    elif "Cut" in command:
        password = Cut(password)
        print(password)
    elif "Substitute" in command:
        result = Substitute(password)
        print(result)
    command = input()
